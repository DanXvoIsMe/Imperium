--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,v,v)local v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj=79,66,48,32,18,58,57,23,94,73,25,10,74,94,80,55,50,57,14,96,94,82,59,29,99,48,48,48,75,35,21,22,62,83,94,96,93,55,44,46,66,52,11,62,75,90,76,85,39,11,69 while v~=65 do if w<=731 then if w>=366 then if w>=552 then if w<=638 then if w>=600 then if w>609 then w=665 cf={}else bs=tonumber w=638 end else ci=(unpack or table.unpack)w=600 end else if w<=665 then for ck=0,255 do cf[ck]=bd(ck);end w=687 else if w<723 then bn=btfunction(ck,cl,cl,cl)return cf[bs(ck,m)]end)w=731 else w=746 cg={{0,1,2,3,n,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,g,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,p,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,o,12,15,14,9,c,11,10,},{t,7,k,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,r,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil}end end end else if w>=442 then if w>=481 then if w<513 then w=515 ca=math.abs else w=552 do bp=math.floor end end else bq=(function(c,g,g,g,g)do if not(bw(c)~='number')then return true else do return false end end end end)w=481 end else if w>375 then w=442 bw=type else bo=select w=413 end end end else if w>=209 then if w>=286 then if w<=286 then w=311 bi=math.ldexp else if w>317 then w=366 ba=setmetatable else w=350 y=(getfenv or function()return _ENV end)end end else if w>=246 then if w<262 then w=271 be=table.concat else do bl=table.insert end w=286 end else bm=string.rep w=246 end end else if w>=134 then if w>=178 then if w>181 then bt=string.gsub w=209 else w=193 do cj=string.sub end end else w=178 bd=string.char end else if w>73 then w=134 cd=string.byte else x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj=nil w=108 end end end end else if w<=1100 then if w<=882 then if w>=800 then if w>=843 then if w>845 then for c=1,31 do bv[c]=bk bk=(bk*2)end w=924 else w=882 bk=2 end else bv={[0]=1}w=843 end else if w>748 then w=800 do bj=(2^52)end else bx=''w=772 end end else if w>=1015 then if w>=1063 then if w>1068 then w=1137 bz=function()local c c=cd(bn,bf,bf)bf=(bf+1);return c;end else ch=function()local c,g,k,m c,g,k,m=cd(bn,bf,(bf+3))bf=(bf+4);return((m*16777216)+(k*65536)+(g*256)+c);end w=1100 end else bf=1 w=1063 end else if w>=961 then if w>967 then cb=function(c,g,k,m,m,m)local m m=((c/2^(g-1))%2^((k-1)-(g-1)+1))return(m-m%1);end w=1015 else w=981 bg=(bit_lib and bit_lib.bxor or function(c,g)c=c%(2^32)g=g%(2^32)local k,m=0,1 while c>0 and g>0 do local n,o=c%16,g%16 k=k+cg[n+1][o+1]*m c=(c-n)/16 g=(g-o)/16 m=m*16 end k=k+c*m+g*m return k end)end else w=961 cc=function(c,g,k,m,m,m,m)local m,n,o=59,61,94,51,38,65,23,17,38,32,35,82,71,29,97 while m~=42 do if n<=117 then if n<=61 then n=97 o=nil else if n>105 then n=134 do o=((g/bv[c])%bv[k])end else n=117 o=nil end end else if n<=134 then n=161 o=(o-o%1)else if n<196 then n=203 return o else m=42;end end end end end end end end else if w>=1269 then if w>=1363 then if w>=1396 then if w>1399 then v=65;else w=1427 return bu(bb(y()),{},y())();end else w=1396 bu=function(c,g,k,m)local m,n,o,p,r do p=c[181]end do n=ce end r=c[175]m=c[4]o=c[131]do return function(...)local c,n,t,v,y,bd,be,bg,bi n=1 bi=-1 y=-1 bd={}v={...}do c=(bo(b,...)-1)end do be={}end bg={}for b=0,c do if(not(b<p))then bd[(b-p)]=v[(b+1)];else bg[b]=v[(b+1)];end;end;t=(c-p+1)do while true do local b,t,y,bk,bl,bm,bp,bq,bs,bt bl=m[n]bt=bl[126]bp=bl[93]t=bl[110]bs=bl[133]bk=bl[67]y=bl[179]bm=bl[147]bq=bl[160]b=bl[52]if not(bt>48)then do if not(bl[e]>23)then if not(bt>11)then if not(bt<6)then if not(bt<9)then if not(bt>9)then bg[t]=(bg[bq]+r[bk]);else if(bt>10)then m[n]=x[bl[179]];n=bq;else ce[t]={}end end else if not(bt<7)then if(bt<8)then bg[t]=#bg[bl[160]];else bg[t]={};end else bg[bl[110]]=bg[bl[160]][bg[bl[67]]];end end else do if not(bt>2)then if not(bt>0)then bg[t]=bg[bq]else do if(bt>1)then local e,bp e=t do bp={}end while#be>0 do for bv=1,#be do local bv=be[bv]for bw=0,#bv do local bv=bv[bw]local bw=bv[1]local bx=bv[2]if bw==bg and bx>=0 then bp[bx]=bw[bx]bv[1]=bp end end end break end do return bg[e],bg[(e+1)]end else bg[t]=ce[bs]end end end else do if not(bl[126]>3)then bg[t]=r[bq]else if(bt<a)then if(r[bk]~=bg[t])then n=bq;end;else do while(not bg[t])do n=bq;break end end end end end end end end else if not(bt>u)then if not(bt<15)then do if not(bt<16)then if 16==bt then local a a=t bg[a]=bg[a](ci(bg,a+1,bi));else do if(not(bg[t]<bg[bk]))then n=bq;end;end end else do bg[b]=(function()bg[bl[110]]=bu(o[bs],nil,k);end)end end end else if not(bl[126]<13)then if(bt<14)then bg={};for a=0,c do if(a<p)then bg[a]=v[(a+1)];else break end;end;else local a a=t do do return ci(bg,a,(a+bq))end end;end else bg[bl[110]]=k[r[bq]][r[bk]];end end else if not(bl[126]>20)then if not(bt>18)then local a,c,e e=t a=bg[e]c=bg[(e+2)]do if((c>0))then do if((a>bg[e+1]))then do n=bl[160];end else bg[(e+3)]=a;end end elseif((a<bg[e+1]))then n=bq;else bg[(e+3)]=a;end end else if(bt<20)then do bg[t]=(bg[bl[j]]+bg[bk]);end else ce[t]()end end else if not(bt<22)then if(bt>22)then do do return bg[bl[110]]();end end;else local a,c c,a=bh(...)for a=1,t do bg[(a-1)]=c[a]end end else bg[t]=(not(bq==0));n=(n+1);end end end end else do if not(bt>35)then if not(bt>29)then if not(bl[126]>26)then if not(bt<25)then if not(bt~=25)then bg[bl[bl[110]]]=bg else local a,c a=t c={}if(#be>0)then do for e=1,#be do local j j=be[e]for e=0,#j do local p,u,v p=j[e]v=p[1]u=p[2]do if(v==bg and u>=0)then c[u]=v[u]p[1]=c end end end end end end return ci(bg,a,bi);end else do bg[t]=(bg[bl[160]]%r[bk]);end end else if not(bt>27)then local a,c,e e=t a={bg[e](ci(bg,e+1,bq))}c=0 for j=e,bk do c=(c+1);bg[j]=a[c];end else if(bt<29)then local a,c do a=t end c=bq for e=a,c do bg[e]=bd[(e-a)];end;else ce=bg end end end else if not(bt<33)then if not(bt>33)then local a,c,e,j j=t a,e=bh(bg[j](ci(bg,(j+1),bq)))bi=(e+j-1)c=0 for e=j,bi do c=(c+1);bg[e]=a[c];end;else if 34==bt then bg[bl[f]]=g[bq];else m[n]=x[bl[179]];n=bq;end end else if not(bt<31)then if(bt<32)then local a,c,e e=t c=bg[(e+2)]a=(bg[e]+c)do bg[e]=a;end if((c>0))then if(not(a>bg[e+1]))then n=bq;bg[(e+3)]=a;end elseif(not(a<bg[e+1]))then do n=bl[160];end bg[(e+3)]=a;end else bg[bl[110]]();end else if bg[bl[110]]then n=bq;end;end end end else if not(bt<42)then if not(bl[126]>44)then if not(bl[126]>42)then bg[t]=bg[bq];else if(bt>43)then k[r[bq]]=bg[t];else local a a=t bg[a]=bg[a](ci(bg,a+q,bq));end end else if not(bl[126]>46)then do if not(bt~=45)then bg[t]=(bg[bl[160]]-bg[bk]);else do if t then t=false;bk=bq;n=(n-1);else do n=(n+bq+bl[67]);end end end end end else do if(bt>47)then r=ce[t](r)else bg[t]=nil;end end end end else do if not(bt<39)then do if not(bt<40)then if(bt<41)then k=bg[bl[t]]else n=((bg[t]<bg[bk])and bq or n)end else if((bg[t]>bg[bk]))then n=bl[160];end;end end else if not(bt>36)then bi=bl[bl[110]];else if(bt>37)then if not bg[bk]then bg[t]=bg[bk];n=bq;end;else n=((r[bl[110]]~=r[bk])and bq or n)end end end end end end end end end else if not(bt<73)then do if not(bt>84)then if not(bt>78)then if not(bt<76)then if not(bt<77)then if(bt<78)then g[bq]=bg[t];else if((r[t]<bg[bk]))then n=bq;end;end else local a a=t bg[a]=bg[a](bg[a+1]);end else if not(bt<74)then if(bt<75)then if(r[bk]==bg[t])then n=bq;end;else do n=bq;end end else bg[t]=bg[bq][r[bk]];end end else if not(bt<82)then do if not(bt<83)then if not(bt~=83)then ce[bl[110]]=ce[bs]else for a=t,bq do do bg[a]=nil;end end;end else bg[bl[110]]=ce[bs]end end else if not(bt>79)then do bg[t]=(bg[bq]*bg[bl[67]]);end else do if 80==bt then bg[t][r[bq]]=r[bk];else end end end end end else if not(bt<91)then if not(bt>93)then if not(bt>91)then local a do a=t end bg[a](ci(bg,(a+1),bq))else if(bt<93)then bg[t]=(bg[bq]/bg[bk]);else do do return bg[t]end end end end else if not(bt>95)then if not(bl[126]~=94)then local a,c,e do c=t end a={bg[c](bg[c+1])}e=0 for f=c,bk do e=(e+1);bg[f]=a[e];end else local a,c a=bq c=bg[a]for e=(a+1),bk do c=(c..bg[e]);end;bg[t]=c;end else do if(bt>96)then else do bg[t]=(bg[bq]^bg[bk]);end end end end end else do if not(bl[126]>87)then if not(bt>85)then else if 86==bt then bg[t]=(bg[bq]/r[bk]);else local a,c c=t a=bg[bq]bg[(c+1)]=a;do bg[c]=a[r[bk]];end end end else if not(bt>88)then local a,c,e,f,j do e=t end do f=bk end j=(e+2)do c={bg[e](bg[e+1],bg[j])}end for p=1,f do bg[(j+p)]=c[p]end a=bg[(e+3)]if a then bg[j]=a else n=bq;end;else if(bt<90)then local a do a=t end bg[a](bg[(a+1)])else bg[t]=(not bg[bl[160]]);end end end end end end end else if not(bt<61)then if not(bt>66)then do if not(bl[126]<64)then if not(bt<65)then if(bt<66)then bg[b]=(function()do bg[t]=bu(o[bs],nil,k);end end)else local a,c,e,f c=t f=((bl[67]-1)*50)e=bg[c]a=bq for j=1,a do e[(f+j)]=bg[(c+j)]end;end else local a a=bg[bm][y]bg[bm][y]=(a..bg[bk]);end else if not(bt<62)then do if(bt>62)then local a,c,e a=o[bl[160]]e=nil c={}e=ba({},{__index=function(f,f)local f=c[f];return f[1][f[2]];end,__newindex=function(f,f,j)local f=c[f]f[1][f[2]]=j;end;});for f=1,bk do local j j=bl[12][f]if j[1]then c[(f-1)]={bg,j[2],nil};else c[(f-1)]={g,j[2],nil,nil};end;be[(#be+1)]=c;end;do bg[t]=bu(a,e,k);end else bg[bl[110]]=(bg[bq]*r[bk]);end end else bg[t]=(bg[bl[160]]%bg[bk]);end end end else do if not(bt<70)then if not(bt<71)then if(bt<h)then do bg[t]=k[r[bq]];end else do bg[t]=bu(o[bl[160]],nil,k);end end elseif(not(bg[t]==bg[bk]))then n=bq;end else if not(bt>67)then bg[b]();else if(bt<69)then local a,b,c,e e=t b={bg[e]()}do a=bk end c=0 for f=e,a do c=(c+1);bg[f]=b[c];end else do return bg[bm][bl[179]]end end end end end end else do if not(bt>54)then if not(bt>51)then if not(bl[126]<50)then if(bt<51)then local a,b do a=t end b={}for c=1,#be do local e e=be[c]for c=0,#e do local f,g,h g=e[c]f=g[1]h=g[2]if(f==bg and h>=a)then b[h]=f[h];do g[1]=b;end end;end;end;else local a,b,c do a=bl[110]end do c=bg[a]end b=bq for e=i,b do c[e]=bg[(a+e)]end;end else local a a=t do return bg[a](ci(bg,(a+1),bq))end;end else do if not(bt>52)then bg[t][r[bl[160]]]=bg[bk];else if(bt<54)then bg[t][bg[bq]]=bg[bk];else m[n]={[67]=0,[160]=4,[110]=6,[126]=bt- -17,[179]=0};n=(n-1);end end end end else if not(bt>57)then if not(bt<56)then if(bt<57)then while(bg[t]<bg[bk])do n=bq;break end else local a a={}if(#be>0)then for b=1,#be do local c c=be[b]for b=0,#c do local e,f,g do g=c[b]end f=g[1]e=g[2]do if(f==bg and e>=0)then a[e]=f[e]g[1]=a end end end end end return bt,false,true;end else bg[t]=-bg[bq];end else if not(bt<59)then if(bt<60)then local a,b b=t a=bg[bl[160]]bg[(b+1)]=a;do bg[b]=a[bg[bk]];end else m[n]={[110]=1,[67]=3,[126]=bt- -27,[160]=1,[179]=0};do n=(n-1);end end else ce[t]=bg[bs]end end end end end end end n=(n+1);end;end end;end end end else if w<=1269 then w=1289 bb=function(a,b,b,b)local b,c,e,f,g,h,i,j=86,65,85,15,94,44,48,82,23,46,33,37,40,50,94,91,82,97,60,99,80,40,87,97,20 while b~=49 do if c>=327 then if c>=428 then if c>=491 then if c<=491 then g[4]=f;c=513 else if c>520 then b=49;else c=556 return g;end end else if c<451 then c=457 g[181]=bz();else for b=1,ch()do local k,m,n,o,p,q=93,52,41,95,95,49,70,19,47,64,69,94,45,27,21,91,25,67,12,46,20,69,46,46 while k~=54 do if m>=336 then if m<=419 then if m>=382 then if m<416 then m=419 p[160]=cb(o,12,33);else p[67]=cb(n,21,29);m=462 end else if m>344 then p[110]=cb(n,3,11);m=382 else m=367 p[126]=cb(o,1,11);end end else if m>=531 then if m>=548 then if m>556 then k=54;else m=582 do f[b]=p;end end else p[52]=-p[67]m=548 end else if m>467 then m=531 p[147]=-p[110]else p[179]=cb(n,12,20);m=487 end end end else if m>=169 then if m<=185 then if m<176 then do while(bz()==1)do for b=1,bz()do p[12][b]={bz()==0,ch()}end break end end m=185 else do n=ch()end m=226 end else if m<=226 then o=ch()m=248 else if m>251 then p[27]=q m=336 else q=cb(n,1,2)m=291 end end end else if m>=116 then if m<124 then m=131 p[93]=bz();else p[d]={};m=169 end else if m>57 then m=116 do p={{},nil,nil}end else n,o,p,q=nil m=71 end end end end end end c=491 end end else if c<=356 then if c>329 then i={}c=382 else h=ch()c=356 end else if c>386 then g[175]=i c=428 else c=412 for b=1,h do local d,k,m,n=68,39,61,60,26,27,13,15,79,25,41,70,52 while d~=39 do if k<=99 then if k>=71 then if k>77 then k=143 m=nil else n=bz()k=99 end else m,n=nil k=71 end else if k<=143 then if(not(n~=4))then m=(not(bz()==0));elseif(not(n~=2))then do m=bc();end elseif(3==n)then do m=br();end elseif(not(n~=0))then m=a[br()];end;k=188 else if k>197 then break else k=228 i[b]=m;end end end end end end end end else if c<=162 then if c<=110 then if c>70 then f={}c=145 else c=110 e,f,g,h,i,j=nil end else if c<153 then c=162 j={}else g={}c=194 end end else if c<=241 then if c>200 then c=282 for a=(#x+1),(#x+e)do local b,d,f,h,i=64,66,50,64,79,14,95,86,42,70,50,59,81,26,32,59,67,28,73,74,91,41,85,23,22 while b~=54 do if d<=310 then if d>=214 then if d>=285 then if d>291 then f[126]=cb(i,1,11);d=331 else f[27]=cb(h,1,2);d=310 end else if d<240 then d=244 i=ch()else f[179]=bz();d=285 end end else if d>=136 then if d>144 then do h=ch()end d=214 else f[93]=bz();d=169 end else if d<89 then f,h,i=nil d=92 else d=136 do f={}end end end end else if d<=410 then if d<=367 then if d>333 then d=392 f[133]=cb(h,12,20);else do f[110]=cb(h,3,11);end d=367 end else if d>401 then d=444 f[160]=cb(i,12,33);else f[67]=cb(h,21,29);d=410 end end else if d<=481 then if d>452 then f[52]=-f[l]d=513 else f[147]=-f[110]d=481 end else if d<542 then d=544 x[a]=f;else b=54;end end end end end end else c=241 e=ch()end else if c<304 then for a=1,ch()do j[a-1]=bb();end c=309 else c=327 g[131]=j;end end end end end end else if w>1292 then w=1363 by={}else ce={}w=1316 end end end else if w>=1183 then if w<=1183 then br=function(a,a,a)local a,b,c,d=68,38,18,48,40,59,22,31,18,11,41,62,77 while a~=40 do if b>=148 then if b>=171 then if b>177 then break else b=198 return c;end else b=171 bf=(bf+d);end else if b<=38 then c,d=nil b=80 else if b>87 then b=148 c=bn:sub(bf,(bf+d-1))else b=129 d=ch()end end end end end w=1222 else if w>1226 then x={}w=1269 else w=1251 bh=function(...)return{...},bo('#',...)end end end else if w<1157 then z=function()local a,b b,a=cd(bn,bf,(bf+2))bf=(bf+2);return((a*256)+b);end w=1163 else bc=function()local a,b,c,d,e,f,g,h=78,41,85,95,97,83,67,14,88,59,35,61,83,95,60,87,99,40 while a~=32 do if b>=171 then if b>=251 then if b<=251 then if 0==f then if 0~=g then f=1 do h=0 end else return(c*0)end elseif 2047~=f then else if not(g~=s)then do return(c*(0/0))end else return(c*(1/0))end end b=279 else if b>287 then a=32;else b=318 do return(c*(2^(f-1023))*(g/bj+h))end end end else if b<=171 then b=198 f=cc(20,e,11)else if b<223 then g=(cc(0,e,20)*4294967296+d)b=227 else b=251 h=1 end end end else if b>=81 then if b>=124 then if b<146 then if((d==0 and e==0))then return 0 end b=153 else c=((-1)^cc(31,e,1))b=171 end else e=ch()b=124 end else if b<54 then c,d,e,f,g,h=nil b=56 else b=81 d=ch()end end end end end w=1183 end end end end end end end)(5,'#',8,12,126,110,14,72,1,160,4,67,16,4,13,12,1,12,0,6,17)
